<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">  
  <modelVersion>4.0.0</modelVersion>  
  <groupId>ssm_project</groupId>  
  <artifactId>ssm_project</artifactId>  
  <version>1.0-SNAPSHOT</version>  
  <!--
          1.编译插件
          2.相关依赖
          a.mybatis依赖
          b.springmvc依赖、ajax依赖、servlet依赖
          c.切面依赖
          d.orm整合依赖
          e.日志依赖
          f.单元测试
          -->  
  <packaging>war</packaging>
  <build> 
    <plugins> 
      <plugin> 
        <groupId>org.apache.maven.plugins</groupId>  
        <artifactId>maven-compiler-plugin</artifactId>  
        <version>3.8.1</version>  
        <configuration> 
          <source>1.8</source>  
          <target>1.8</target> 
        </configuration> 
      </plugin> 
    </plugins> 
  </build>  
  <!--声明版本变量-->  
  <properties> 
    <spring-version>5.2.3.RELEASE</spring-version> 
  </properties>
  <dependencies>
    <dependency> 
      <!--mysql-->  
      <groupId>mysql</groupId>  
      <artifactId>mysql-connector-java</artifactId>  
      <version>8.0.21</version> 
    </dependency>  
    <dependency> 
      <!--druid-->  
      <groupId>com.alibaba</groupId>  
      <artifactId>druid</artifactId>  
      <version>1.1.22</version> 
    </dependency>  
    <dependency> 
      <!--mybatis-->  
      <groupId>org.mybatis</groupId>  
      <artifactId>mybatis</artifactId>  
      <version>3.5.5</version> 
    </dependency>  
    <dependency> 
      <!--spring与mybatis整合依赖  mybatis提供-->  
      <groupId>org.mybatis</groupId>  
      <artifactId>mybatis-spring</artifactId>  
      <version>2.0.5</version> 
    </dependency>  
    <dependency> 
      <!--spring的orm支持包  包括tx和jdbc-->  
      <groupId>org.springframework</groupId>  
      <artifactId>spring-orm</artifactId>  
      <version>${spring-version}</version> 
    </dependency>  
    <dependency> 
      <!--springmvc-->  
      <groupId>org.springframework</groupId>  
      <artifactId>spring-webmvc</artifactId>  
      <version>${spring-version}</version> 
    </dependency>  
    <dependency> 
      <!--ajax支持-->  
      <groupId>com.fasterxml.jackson.core</groupId>  
      <artifactId>jackson-databind</artifactId>  
      <version>2.11.2</version> 
    </dependency>  
    <dependency> 
      <!--servlet依赖-->  
      <groupId>javax.servlet</groupId>  
      <artifactId>javax.servlet-api</artifactId>  
      <version>3.1.0</version> 
    </dependency>  
    <dependency> 
      <!--aop依赖-->  
      <groupId>org.springframework</groupId>  
      <artifactId>spring-aspects</artifactId>  
      <version>${spring-version}</version> 
    </dependency>  
    <!--slf4j 对应  log4j  2.0以上依赖
            slf4j：日志标准框架  定义了日志接口
            log4j2:日志实现框架  具体日志功能实现
            jcl:spring5以后使用的日志组件  通过slf4j+log4j2可以实现日志
            -->  
    <dependency> 
      <groupId>org.apache.logging.log4j</groupId>  
      <artifactId>log4j-slf4j-impl</artifactId>  
      <version>2.12.0</version> 
    </dependency>  
    <dependency> 
      <!--单元测试-->  
      <groupId>junit</groupId>  
      <artifactId>junit</artifactId>  
      <version>4.12</version> 
    </dependency>  
    <dependency> 
      <!--spring整合test依赖-->  
      <groupId>org.springframework</groupId>  
      <artifactId>spring-test</artifactId>  
      <version>${spring-version}</version> 
    </dependency>  
    <!--
        集成通用mapper开发流程:
        1.引入依赖
        2.配置SqlSessionFactoryBean，修改使用通用mapper提供的 Configuration
        3.修改MapperScanner替换为通用mapper提供的MapperScanner
        4.mapper接口实现继承tkmapper提供的公共父接口Mapper
        5.实体类添加通用mapper需要用到的映射配置注解，添加主键标记
        -->  
    <dependency> 
      <groupId>tk.mybatis</groupId>  
      <artifactId>mapper</artifactId>  
      <version>4.1.5</version> 
    </dependency>  
    <!--分页插件开发流程：
    1.引入依赖
    2.修改SqlSessionFactoryBean处理逻辑，添加一个setPlugin方法，放入插件对象
    3.在需要分页的service层调用mapper之前添加拦截逻辑，开启分页处理
    4.将返回list封装成一个分页对象
        -->  
    <dependency> 
      <groupId>com.github.pagehelper</groupId>  
      <artifactId>pagehelper</artifactId>  
      <version>5.2.0</version> 
    </dependency>

    <!--
    1.引入依赖
    2.复制官方提供的src下原代码目录到项目中
    3.复制config.json到类路径
    4.参考controller.jsp处理读取配置逻辑，修改为读取类路径下配置文件方式
    5.实现其他文件上传统一处理接口逻辑
    -->
    <!--百度富文本包，由于远程仓库中不存在该包，需要自行打包到本地仓库
      命令行打包：
      1.maven环境变量配置
      2.打开cmd控制台，执行install命令打包到本地仓库
      mvn install:install-file -DgroupId=com.baidu -DartifactId=ueditor  -Dversion=1.1.2 -Dpackaging=jar -Dfile=C:\Users\FT\ueditor-1.1.2.jar
-->
    <dependency>
      <groupId>com.baidu</groupId>
      <artifactId>ueditor</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency><!--官方json转换包  -->
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20170516</version>
    </dependency>
    <!--文件上传-->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.3.3</version>
    </dependency>
    <!--<dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
    </dependency>-->
    <dependency><!--commons工具包-->
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.9</version>
    </dependency>

    <dependency><!--easyexcel 依赖-->
      <groupId>com.alibaba</groupId>
      <artifactId>easyexcel</artifactId>
      <version>2.2.6</version>
    </dependency>

    <dependency><!--连接驱动-->
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>2.9.0</version>
    </dependency>

    <dependency><!--spring提供的与redis集成的依赖-->
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-redis</artifactId>
      <version>1.8.12.RELEASE</version>
    </dependency>

      <dependency>
          <groupId>com.github.penggle</groupId>
          <artifactId>kaptcha</artifactId>
          <version>2.3.2</version>
      </dependency>
  </dependencies>
</project>
